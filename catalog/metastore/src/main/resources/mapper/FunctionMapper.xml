<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "<http://mybatis.org/dtd/mybatis-3-mapper.dtd>">
<mapper namespace="io.polycat.catalog.store.mapper.FunctionMapper">
    <update id="createFunctionSubspace">
        DROP TABLE IF EXISTS schema_${projectId}.function_info;
        CREATE TABLE schema_${projectId}.function_info
        (
        catalog_id VARCHAR(64) NOT NULL,
        database_id VARCHAR(64) NOT NULL,
        function_name VARCHAR(128) NOT NULL,
        class_name VARCHAR(64) NOT NULL,
        owner_name VARCHAR(64) DEFAULT NULL,
        owner_type VARCHAR(64) DEFAULT NULL,
        function_type VARCHAR(64) DEFAULT NULL,
        create_time BIGINT NOT NULL,
        resource_uris BYTEA NOT NULL,
        CONSTRAINT function_key PRIMARY KEY(catalog_id, database_id, function_name)
        );
    </update>

    <insert id="insertFunction">
        INSERT INTO schema_${projectId}.function_info
        VALUES (#{record.catalogId}, #{record.databaseId}, #{record.functionName}, #{record.className},
        #{record.ownerName}, #{record.ownerType}, #{record.functionType}, #{record.createTime}, #{record.resourceUris})
    </insert>

    <select id="getFunction" resultType="io.polycat.catalog.store.gaussdb.pojo.FunctionInfoRecord">
        SELECT * FROM schema_${projectId}.function_info
        WHERE catalog_id=#{catalogId} AND database_id=#{databaseId} AND function_name=#{functionName}
    </select>

    <select id="listFunction" resultType="io.polycat.catalog.store.gaussdb.pojo.FunctionInfoRecord">
        SELECT * FROM schema_${projectId}.function_info
        WHERE catalog_id=#{catalogId} AND database_id=#{databaseId} AND CASE WHEN #{pattern}::text is null OR
        #{pattern}::text = '' THEN 1=1
        ELSE function_name LIKE CONCAT(#{pattern}::text, '%') END
    </select>

    <delete id="deleteFunction">
        DELETE FROM schema_${projectId}.function_info WHERE catalog_id=#{catalogId} AND database_id=#{databaseId} AND
        function_name=#{functionName}
    </delete>
</mapper>