<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "<http://mybatis.org/dtd/mybatis-3-mapper.dtd>">
<mapper namespace="io.polycat.catalog.store.mapper.RolePropertiesMapper">
    <update id="createRolePropertiesSubspace">
        DROP TABLE IF EXISTS schema_${projectId}.role_properties;
        CREATE TABLE schema_${projectId}.role_properties
        (
        role_id VARCHAR(64) NOT NULL,
        name VARCHAR(64) NOT NULL,
        create_time VARCHAR(64) NOT NULL,
        owner_id VARCHAR(64) NOT NULL,
        comment VARCHAR(64) DEFAULT NULL
        );
    </update>

    <select id="showRoleObjectsByFilter" resultType="io.polycat.catalog.store.gaussdb.pojo.RoleObjectRecord">
        WITH role_properties_object_base AS (
            SELECT * FROM schema_${projectId}.role_properties
            WHERE ${filter}
        )
        SELECT role_id, name role_name, owner_id, create_time, comment, string_agg(DISTINCT user_id, ',') AS users FROM (
            SELECT t2.*, t1.user_id AS user_id FROM role_properties_object_base AS t2
            LEFT JOIN schema_${projectId}.role_user AS t1
            ON t1.role_id = t2.role_id
        ) tmp GROUP BY role_id, role_name, owner_id, create_time, comment
    </select>

    <select id="getRolePropertiesList" resultType="io.polycat.catalog.store.gaussdb.pojo.RolePropertiesRecord">
        SELECT * FROM schema_${projectId}.role_properties
        WHERE ${filter}
    </select>
</mapper>